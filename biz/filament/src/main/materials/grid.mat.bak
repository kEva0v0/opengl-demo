// Simple unlit material that uses the colors associated with each vertex.
//
// This source material must be compiled to a binary material using the matc tool.
// The command used to compile this material is:
// matc -p mobile -a opengl -o app/src/main/assets/baked_color.filamat app/src/materials/baked_color.mat
//
// See build.gradle for an example of how to compile materials automatically
// Please refer to the documentation for more information about matc and the materials system.

material {
    name : baked_color,
    // Lists the required vertex attributes
    // Here we only need a color (RGBA)
    requires : [
        position,
        color
    ],

    // This material disables all lighting
    shadingModel : unlit,
}

fragment {
    void material(inout MaterialInputs material) {
        // You must always call the prepareMaterial() function
        prepareMaterial(material);

        // We set the material's color to the color interpolated from
        // the model's vertices
        material.baseColor = getColor();
    }
}

vertex {

    float4 getFloorColor() {
        // float4(r, g, b, a)
        float4 lineColor = float4(1.0,0.0,0.0,1.0);
        lineColor.rgb *= lineColor.a;
        //float4 floorColor = float4(0.035, 0.035, 0.035, 1.0);
        float4 floorColor = float4(0.0, 0.0, 1.0, 1.0);
        float lineSplit = 1.0;
        if (mod(getPosition().xyz.x,lineSplit) > 0.1 || mod(getPosition().xyz.z,lineSplit) > 0.1) {
            return lineColor;
        } else {
            return floorColor;
        }
    }

    void materialVertex(inout MaterialVertexInputs material) {

        // We set the material's color to the color interpolated from
        // the model's vertices
        material.color = getFloorColor();
    }
}