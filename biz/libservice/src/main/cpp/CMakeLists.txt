cmake_minimum_required(VERSION 3.8)
include(ExternalProject)

project("libservice")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../jniLibs/${ANDROID_ABI})

# Copy From CocosApplication.mk
## CMAKE ENV
set(CMAKE_SHARED_LINKER_FLAGS "-latomic")
set(USE_ARM_MODE 1)

## COCOS ENV
set(USE_GFX_RENDERER 1)
set(USE_VIDEO 1)
set(USE_WEB_VIEW 1)
set(USE_AUDIO 1)
set(USE_SOCKET 1)
set(USE_SPINE 1)
set(USE_DRAGONBONES 1)
set(USE_TIFF 1)
set(USE_MIDDLEWARE 1)
set(USE_PARTICLE 1)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_GFX_RENDERER=${USE_GFX_RENDERER}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_VIDEO=${USE_VIDEO}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_WEB_VIEW=${USE_WEB_VIEW}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_AUDIO=${USE_AUDIO}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_SOCKET=${USE_SOCKET}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_SPINE=${USE_SPINE}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_DRAGONBONES=${USE_DRAGONBONES}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_TIFF=${USE_TIFF}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_MIDDLEWARE=${USE_MIDDLEWARE}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_PARTICLE=${USE_PARTICLE}")

if(${NDK_DEBUG})
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DCOCOS2D_DEBUG=1")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DCOCOS2D_DEBUG=1")
    set(APP_OPTIM "debug")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DNDEBUG")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DNDEBUG")
    set(APP_OPTIM "release")
endif()

## Android ENV
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -U__SSE__")
set(USE_EDIT_BOX 1)

# ANDROID BUILD
add_library(
    cocos2djs
    SHARED
    main.cpp
    ${COCOS_RUNTIME_PATH}/Classes/AppDelegate.cpp
    ${COCOS_RUNTIME_PATH}/Classes/jsb_module_register.cpp
)
include_directories(${COCOS_RUNTIME_PATH}/Classes)
add_library(cocos2dx_static STATIC IMPORTED)

ExternalProject_Add(

)

